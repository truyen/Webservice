//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Winform.ServiceNhanVien {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NhanVien", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class NhanVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> quyenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pass {
            get {
                return this.passField;
            }
            set {
                if ((object.ReferenceEquals(this.passField, value) != true)) {
                    this.passField = value;
                    this.RaisePropertyChanged("pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> quyen {
            get {
                return this.quyenField;
            }
            set {
                if ((this.quyenField.Equals(value) != true)) {
                    this.quyenField = value;
                    this.RaisePropertyChanged("quyen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ten {
            get {
                return this.tenField;
            }
            set {
                if ((object.ReferenceEquals(this.tenField, value) != true)) {
                    this.tenField = value;
                    this.RaisePropertyChanged("ten");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceNhanVien.IServiceNhanVien")]
    public interface IServiceNhanVien {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/findAll", ReplyAction="http://tempuri.org/IServiceNhanVien/findAllResponse")]
        Winform.ServiceNhanVien.NhanVien[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/findAll", ReplyAction="http://tempuri.org/IServiceNhanVien/findAllResponse")]
        System.Threading.Tasks.Task<Winform.ServiceNhanVien.NhanVien[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/find", ReplyAction="http://tempuri.org/IServiceNhanVien/findResponse")]
        Winform.ServiceNhanVien.NhanVien find(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/find", ReplyAction="http://tempuri.org/IServiceNhanVien/findResponse")]
        System.Threading.Tasks.Task<Winform.ServiceNhanVien.NhanVien> findAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/insert", ReplyAction="http://tempuri.org/IServiceNhanVien/insertResponse")]
        bool insert(string ten, string pass, int quyen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/insert", ReplyAction="http://tempuri.org/IServiceNhanVien/insertResponse")]
        System.Threading.Tasks.Task<bool> insertAsync(string ten, string pass, int quyen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/delete", ReplyAction="http://tempuri.org/IServiceNhanVien/deleteResponse")]
        bool delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/delete", ReplyAction="http://tempuri.org/IServiceNhanVien/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/update", ReplyAction="http://tempuri.org/IServiceNhanVien/updateResponse")]
        bool update(int id, string ten, string pass, int quyen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceNhanVien/update", ReplyAction="http://tempuri.org/IServiceNhanVien/updateResponse")]
        System.Threading.Tasks.Task<bool> updateAsync(int id, string ten, string pass, int quyen);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceNhanVienChannel : Winform.ServiceNhanVien.IServiceNhanVien, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceNhanVienClient : System.ServiceModel.ClientBase<Winform.ServiceNhanVien.IServiceNhanVien>, Winform.ServiceNhanVien.IServiceNhanVien {
        
        public ServiceNhanVienClient() {
        }
        
        public ServiceNhanVienClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceNhanVienClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNhanVienClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceNhanVienClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Winform.ServiceNhanVien.NhanVien[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<Winform.ServiceNhanVien.NhanVien[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public Winform.ServiceNhanVien.NhanVien find(int id) {
            return base.Channel.find(id);
        }
        
        public System.Threading.Tasks.Task<Winform.ServiceNhanVien.NhanVien> findAsync(int id) {
            return base.Channel.findAsync(id);
        }
        
        public bool insert(string ten, string pass, int quyen) {
            return base.Channel.insert(ten, pass, quyen);
        }
        
        public System.Threading.Tasks.Task<bool> insertAsync(string ten, string pass, int quyen) {
            return base.Channel.insertAsync(ten, pass, quyen);
        }
        
        public bool delete(int id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(int id) {
            return base.Channel.deleteAsync(id);
        }
        
        public bool update(int id, string ten, string pass, int quyen) {
            return base.Channel.update(id, ten, pass, quyen);
        }
        
        public System.Threading.Tasks.Task<bool> updateAsync(int id, string ten, string pass, int quyen) {
            return base.Channel.updateAsync(id, ten, pass, quyen);
        }
    }
}
