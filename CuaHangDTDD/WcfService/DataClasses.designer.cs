#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CuaHangDTDD")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHangSX(HangSX instance);
    partial void UpdateHangSX(HangSX instance);
    partial void DeleteHangSX(HangSX instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTonKhoe(TonKhoe instance);
    partial void UpdateTonKhoe(TonKhoe instance);
    partial void DeleteTonKhoe(TonKhoe instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSanPham_ChiTiet(SanPham_ChiTiet instance);
    partial void UpdateSanPham_ChiTiet(SanPham_ChiTiet instance);
    partial void DeleteSanPham_ChiTiet(SanPham_ChiTiet instance);
    partial void InsertChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void UpdateChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void DeleteChiTiet_DonHang(ChiTiet_DonHang instance);
    partial void InsertChiTiet_NhapHang(ChiTiet_NhapHang instance);
    partial void UpdateChiTiet_NhapHang(ChiTiet_NhapHang instance);
    partial void DeleteChiTiet_NhapHang(ChiTiet_NhapHang instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CuaHangDTDDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HangSX> HangSXes
		{
			get
			{
				return this.GetTable<HangSX>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TonKhoe> TonKhoes
		{
			get
			{
				return this.GetTable<TonKhoe>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<SanPham_ChiTiet> SanPham_ChiTiets
		{
			get
			{
				return this.GetTable<SanPham_ChiTiet>();
			}
		}
		
		public System.Data.Linq.Table<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this.GetTable<ChiTiet_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTiet_NhapHang> ChiTiet_NhapHangs
		{
			get
			{
				return this.GetTable<ChiTiet_NhapHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHangs")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _ngay;
		
		private int _tongtien;
		
		private bool _dagiaohang;
		
		private bool _active;
		
		private string _kh_ten;
		
		private string _kh_diachi;
		
		private string _kh_email;
		
		private string _kh_sdt;
		
		private EntitySet<ChiTiet_DonHang> _ChiTiet_DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnngayChanging(System.DateTime value);
    partial void OnngayChanged();
    partial void OntongtienChanging(int value);
    partial void OntongtienChanged();
    partial void OndagiaohangChanging(bool value);
    partial void OndagiaohangChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onkh_tenChanging(string value);
    partial void Onkh_tenChanged();
    partial void Onkh_diachiChanging(string value);
    partial void Onkh_diachiChanged();
    partial void Onkh_emailChanging(string value);
    partial void Onkh_emailChanged();
    partial void Onkh_sdtChanging(string value);
    partial void Onkh_sdtChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTiet_DonHangs = new EntitySet<ChiTiet_DonHang>(new Action<ChiTiet_DonHang>(this.attach_ChiTiet_DonHangs), new Action<ChiTiet_DonHang>(this.detach_ChiTiet_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="DateTime NOT NULL")]
		public System.DateTime ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Int NOT NULL")]
		public int tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dagiaohang", DbType="Bit NOT NULL")]
		public bool dagiaohang
		{
			get
			{
				return this._dagiaohang;
			}
			set
			{
				if ((this._dagiaohang != value))
				{
					this.OndagiaohangChanging(value);
					this.SendPropertyChanging();
					this._dagiaohang = value;
					this.SendPropertyChanged("dagiaohang");
					this.OndagiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kh_ten", DbType="NVarChar(MAX)")]
		public string kh_ten
		{
			get
			{
				return this._kh_ten;
			}
			set
			{
				if ((this._kh_ten != value))
				{
					this.Onkh_tenChanging(value);
					this.SendPropertyChanging();
					this._kh_ten = value;
					this.SendPropertyChanged("kh_ten");
					this.Onkh_tenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kh_diachi", DbType="NVarChar(MAX)")]
		public string kh_diachi
		{
			get
			{
				return this._kh_diachi;
			}
			set
			{
				if ((this._kh_diachi != value))
				{
					this.Onkh_diachiChanging(value);
					this.SendPropertyChanging();
					this._kh_diachi = value;
					this.SendPropertyChanged("kh_diachi");
					this.Onkh_diachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kh_email", DbType="NVarChar(MAX)")]
		public string kh_email
		{
			get
			{
				return this._kh_email;
			}
			set
			{
				if ((this._kh_email != value))
				{
					this.Onkh_emailChanging(value);
					this.SendPropertyChanging();
					this._kh_email = value;
					this.SendPropertyChanged("kh_email");
					this.Onkh_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kh_sdt", DbType="NVarChar(MAX)")]
		public string kh_sdt
		{
			get
			{
				return this._kh_sdt;
			}
			set
			{
				if ((this._kh_sdt != value))
				{
					this.Onkh_sdtChanging(value);
					this.SendPropertyChanging();
					this._kh_sdt = value;
					this.SendPropertyChanged("kh_sdt");
					this.Onkh_sdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTiet_DonHang", Storage="_ChiTiet_DonHangs", ThisKey="id", OtherKey="donhang_id")]
		internal EntitySet<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this._ChiTiet_DonHangs;
			}
			set
			{
				this._ChiTiet_DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangSXes")]
	public partial class HangSX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private bool _active;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public HangSX()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(MAX)")]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSX_SanPham", Storage="_SanPhams", ThisKey="id", OtherKey="hangsx_id")]
		internal EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HangSX = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HangSX = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPhams")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _masp;
		
		private string _ten;
		
		private string _mota;
		
		private int _gia;
		
		private bool _active;
		
		private System.Nullable<int> _hangsx_id;
		
		private EntitySet<SanPham_ChiTiet> _SanPham_ChiTiets;
		
		private EntityRef<HangSX> _HangSX;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OnmotaChanging(string value);
    partial void OnmotaChanged();
    partial void OngiaChanging(int value);
    partial void OngiaChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void Onhangsx_idChanging(System.Nullable<int> value);
    partial void Onhangsx_idChanged();
    #endregion
		
		public SanPham()
		{
			this._SanPham_ChiTiets = new EntitySet<SanPham_ChiTiet>(new Action<SanPham_ChiTiet>(this.attach_SanPham_ChiTiets), new Action<SanPham_ChiTiet>(this.detach_SanPham_ChiTiets));
			this._HangSX = default(EntityRef<HangSX>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="NVarChar(MAX)")]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(MAX)")]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mota", DbType="NVarChar(MAX)")]
		public string mota
		{
			get
			{
				return this._mota;
			}
			set
			{
				if ((this._mota != value))
				{
					this.OnmotaChanging(value);
					this.SendPropertyChanging();
					this._mota = value;
					this.SendPropertyChanged("mota");
					this.OnmotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Int NOT NULL")]
		public int gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hangsx_id", DbType="Int")]
		public System.Nullable<int> hangsx_id
		{
			get
			{
				return this._hangsx_id;
			}
			set
			{
				if ((this._hangsx_id != value))
				{
					if (this._HangSX.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhangsx_idChanging(value);
					this.SendPropertyChanging();
					this._hangsx_id = value;
					this.SendPropertyChanged("hangsx_id");
					this.Onhangsx_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPham_ChiTiet", Storage="_SanPham_ChiTiets", ThisKey="id", OtherKey="sanpham_id")]
		internal EntitySet<SanPham_ChiTiet> SanPham_ChiTiets
		{
			get
			{
				return this._SanPham_ChiTiets;
			}
			set
			{
				this._SanPham_ChiTiets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSX_SanPham", Storage="_HangSX", ThisKey="hangsx_id", OtherKey="id", IsForeignKey=true)]
		public HangSX HangSX
		{
			get
			{
				return this._HangSX.Entity;
			}
			set
			{
				HangSX previousValue = this._HangSX.Entity;
				if (((previousValue != value) 
							|| (this._HangSX.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangSX.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._HangSX.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._hangsx_id = value.id;
					}
					else
					{
						this._hangsx_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("HangSX");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPham_ChiTiets(SanPham_ChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_SanPham_ChiTiets(SanPham_ChiTiet entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TonKhoes")]
	public partial class TonKhoe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _soluong;
		
		private System.DateTime _ngay;
		
		private System.Nullable<int> _sanpham_chitiet_id;
		
		private EntityRef<SanPham_ChiTiet> _SanPham_ChiTiet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OnngayChanging(System.DateTime value);
    partial void OnngayChanged();
    partial void Onsanpham_chitiet_idChanging(System.Nullable<int> value);
    partial void Onsanpham_chitiet_idChanged();
    #endregion
		
		public TonKhoe()
		{
			this._SanPham_ChiTiet = default(EntityRef<SanPham_ChiTiet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="DateTime NOT NULL")]
		public System.DateTime ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sanpham_chitiet_id", DbType="Int")]
		public System.Nullable<int> sanpham_chitiet_id
		{
			get
			{
				return this._sanpham_chitiet_id;
			}
			set
			{
				if ((this._sanpham_chitiet_id != value))
				{
					if (this._SanPham_ChiTiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsanpham_chitiet_idChanging(value);
					this.SendPropertyChanging();
					this._sanpham_chitiet_id = value;
					this.SendPropertyChanged("sanpham_chitiet_id");
					this.Onsanpham_chitiet_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_TonKhoe", Storage="_SanPham_ChiTiet", ThisKey="sanpham_chitiet_id", OtherKey="id", IsForeignKey=true)]
		public SanPham_ChiTiet SanPham_ChiTiet
		{
			get
			{
				return this._SanPham_ChiTiet.Entity;
			}
			set
			{
				SanPham_ChiTiet previousValue = this._SanPham_ChiTiet.Entity;
				if (((previousValue != value) 
							|| (this._SanPham_ChiTiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham_ChiTiet.Entity = null;
						previousValue.TonKhoes.Remove(this);
					}
					this._SanPham_ChiTiet.Entity = value;
					if ((value != null))
					{
						value.TonKhoes.Add(this);
						this._sanpham_chitiet_id = value.id;
					}
					else
					{
						this._sanpham_chitiet_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham_ChiTiet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ten;
		
		private string _pass;
		
		private System.Nullable<int> _quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntenChanging(string value);
    partial void OntenChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnquyenChanging(System.Nullable<int> value);
    partial void OnquyenChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten", DbType="NVarChar(50)")]
		public string ten
		{
			get
			{
				return this._ten;
			}
			set
			{
				if ((this._ten != value))
				{
					this.OntenChanging(value);
					this.SendPropertyChanging();
					this._ten = value;
					this.SendPropertyChanged("ten");
					this.OntenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(50)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyen", DbType="Int")]
		public System.Nullable<int> quyen
		{
			get
			{
				return this._quyen;
			}
			set
			{
				if ((this._quyen != value))
				{
					this.OnquyenChanging(value);
					this.SendPropertyChanging();
					this._quyen = value;
					this.SendPropertyChanged("quyen");
					this.OnquyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham_ChiTiet")]
	public partial class SanPham_ChiTiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private bool _active;
		
		private int _tonkho;
		
		private System.Nullable<int> _mausac_id;
		
		private System.Nullable<int> _sanpham_id;
		
		private EntitySet<TonKhoe> _TonKhoes;
		
		private EntitySet<ChiTiet_DonHang> _ChiTiet_DonHangs;
		
		private EntitySet<ChiTiet_NhapHang> _ChiTiet_NhapHangs;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    partial void OntonkhoChanging(int value);
    partial void OntonkhoChanged();
    partial void Onmausac_idChanging(System.Nullable<int> value);
    partial void Onmausac_idChanged();
    partial void Onsanpham_idChanging(System.Nullable<int> value);
    partial void Onsanpham_idChanged();
    #endregion
		
		public SanPham_ChiTiet()
		{
			this._TonKhoes = new EntitySet<TonKhoe>(new Action<TonKhoe>(this.attach_TonKhoes), new Action<TonKhoe>(this.detach_TonKhoes));
			this._ChiTiet_DonHangs = new EntitySet<ChiTiet_DonHang>(new Action<ChiTiet_DonHang>(this.attach_ChiTiet_DonHangs), new Action<ChiTiet_DonHang>(this.detach_ChiTiet_DonHangs));
			this._ChiTiet_NhapHangs = new EntitySet<ChiTiet_NhapHang>(new Action<ChiTiet_NhapHang>(this.attach_ChiTiet_NhapHangs), new Action<ChiTiet_NhapHang>(this.detach_ChiTiet_NhapHangs));
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tonkho", DbType="Int NOT NULL")]
		public int tonkho
		{
			get
			{
				return this._tonkho;
			}
			set
			{
				if ((this._tonkho != value))
				{
					this.OntonkhoChanging(value);
					this.SendPropertyChanging();
					this._tonkho = value;
					this.SendPropertyChanged("tonkho");
					this.OntonkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mausac_id", DbType="Int")]
		public System.Nullable<int> mausac_id
		{
			get
			{
				return this._mausac_id;
			}
			set
			{
				if ((this._mausac_id != value))
				{
					this.Onmausac_idChanging(value);
					this.SendPropertyChanging();
					this._mausac_id = value;
					this.SendPropertyChanged("mausac_id");
					this.Onmausac_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sanpham_id", DbType="Int")]
		public System.Nullable<int> sanpham_id
		{
			get
			{
				return this._sanpham_id;
			}
			set
			{
				if ((this._sanpham_id != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsanpham_idChanging(value);
					this.SendPropertyChanging();
					this._sanpham_id = value;
					this.SendPropertyChanged("sanpham_id");
					this.Onsanpham_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_TonKhoe", Storage="_TonKhoes", ThisKey="id", OtherKey="sanpham_chitiet_id")]
		internal EntitySet<TonKhoe> TonKhoes
		{
			get
			{
				return this._TonKhoes;
			}
			set
			{
				this._TonKhoes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_ChiTiet_DonHang", Storage="_ChiTiet_DonHangs", ThisKey="id", OtherKey="sanpham_chitiet_id")]
		internal EntitySet<ChiTiet_DonHang> ChiTiet_DonHangs
		{
			get
			{
				return this._ChiTiet_DonHangs;
			}
			set
			{
				this._ChiTiet_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_ChiTiet_NhapHang", Storage="_ChiTiet_NhapHangs", ThisKey="id", OtherKey="sanpham_chitiet_id")]
		internal EntitySet<ChiTiet_NhapHang> ChiTiet_NhapHangs
		{
			get
			{
				return this._ChiTiet_NhapHangs;
			}
			set
			{
				this._ChiTiet_NhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_SanPham_ChiTiet", Storage="_SanPham", ThisKey="sanpham_id", OtherKey="id", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.SanPham_ChiTiets.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.SanPham_ChiTiets.Add(this);
						this._sanpham_id = value.id;
					}
					else
					{
						this._sanpham_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TonKhoes(TonKhoe entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = this;
		}
		
		private void detach_TonKhoes(TonKhoe entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = null;
		}
		
		private void attach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = this;
		}
		
		private void detach_ChiTiet_DonHangs(ChiTiet_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = null;
		}
		
		private void attach_ChiTiet_NhapHangs(ChiTiet_NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = this;
		}
		
		private void detach_ChiTiet_NhapHangs(ChiTiet_NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham_ChiTiet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet_DonHang")]
	public partial class ChiTiet_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _soluong;
		
		private int _dongia;
		
		private System.Nullable<int> _donhang_id;
		
		private System.Nullable<int> _sanpham_chitiet_id;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham_ChiTiet> _SanPham_ChiTiet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void Ondonhang_idChanging(System.Nullable<int> value);
    partial void Ondonhang_idChanged();
    partial void Onsanpham_chitiet_idChanging(System.Nullable<int> value);
    partial void Onsanpham_chitiet_idChanged();
    #endregion
		
		public ChiTiet_DonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham_ChiTiet = default(EntityRef<SanPham_ChiTiet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donhang_id", DbType="Int")]
		public System.Nullable<int> donhang_id
		{
			get
			{
				return this._donhang_id;
			}
			set
			{
				if ((this._donhang_id != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondonhang_idChanging(value);
					this.SendPropertyChanging();
					this._donhang_id = value;
					this.SendPropertyChanged("donhang_id");
					this.Ondonhang_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sanpham_chitiet_id", DbType="Int")]
		public System.Nullable<int> sanpham_chitiet_id
		{
			get
			{
				return this._sanpham_chitiet_id;
			}
			set
			{
				if ((this._sanpham_chitiet_id != value))
				{
					if (this._SanPham_ChiTiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsanpham_chitiet_idChanging(value);
					this.SendPropertyChanging();
					this._sanpham_chitiet_id = value;
					this.SendPropertyChanged("sanpham_chitiet_id");
					this.Onsanpham_chitiet_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTiet_DonHang", Storage="_DonHang", ThisKey="donhang_id", OtherKey="id", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTiet_DonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_DonHangs.Add(this);
						this._donhang_id = value.id;
					}
					else
					{
						this._donhang_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_ChiTiet_DonHang", Storage="_SanPham_ChiTiet", ThisKey="sanpham_chitiet_id", OtherKey="id", IsForeignKey=true)]
		public SanPham_ChiTiet SanPham_ChiTiet
		{
			get
			{
				return this._SanPham_ChiTiet.Entity;
			}
			set
			{
				SanPham_ChiTiet previousValue = this._SanPham_ChiTiet.Entity;
				if (((previousValue != value) 
							|| (this._SanPham_ChiTiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham_ChiTiet.Entity = null;
						previousValue.ChiTiet_DonHangs.Remove(this);
					}
					this._SanPham_ChiTiet.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_DonHangs.Add(this);
						this._sanpham_chitiet_id = value.id;
					}
					else
					{
						this._sanpham_chitiet_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham_ChiTiet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTiet_NhapHang")]
	public partial class ChiTiet_NhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _soluong;
		
		private int _dongia;
		
		private System.Nullable<int> _nhaphang_id;
		
		private System.Nullable<int> _sanpham_chitiet_id;
		
		private EntityRef<SanPham_ChiTiet> _SanPham_ChiTiet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OndongiaChanging(int value);
    partial void OndongiaChanged();
    partial void Onnhaphang_idChanging(System.Nullable<int> value);
    partial void Onnhaphang_idChanged();
    partial void Onsanpham_chitiet_idChanging(System.Nullable<int> value);
    partial void Onsanpham_chitiet_idChanged();
    #endregion
		
		public ChiTiet_NhapHang()
		{
			this._SanPham_ChiTiet = default(EntityRef<SanPham_ChiTiet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Int NOT NULL")]
		public int dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nhaphang_id", DbType="Int")]
		public System.Nullable<int> nhaphang_id
		{
			get
			{
				return this._nhaphang_id;
			}
			set
			{
				if ((this._nhaphang_id != value))
				{
					this.Onnhaphang_idChanging(value);
					this.SendPropertyChanging();
					this._nhaphang_id = value;
					this.SendPropertyChanged("nhaphang_id");
					this.Onnhaphang_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sanpham_chitiet_id", DbType="Int")]
		public System.Nullable<int> sanpham_chitiet_id
		{
			get
			{
				return this._sanpham_chitiet_id;
			}
			set
			{
				if ((this._sanpham_chitiet_id != value))
				{
					if (this._SanPham_ChiTiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsanpham_chitiet_idChanging(value);
					this.SendPropertyChanging();
					this._sanpham_chitiet_id = value;
					this.SendPropertyChanged("sanpham_chitiet_id");
					this.Onsanpham_chitiet_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTiet_ChiTiet_NhapHang", Storage="_SanPham_ChiTiet", ThisKey="sanpham_chitiet_id", OtherKey="id", IsForeignKey=true)]
		public SanPham_ChiTiet SanPham_ChiTiet
		{
			get
			{
				return this._SanPham_ChiTiet.Entity;
			}
			set
			{
				SanPham_ChiTiet previousValue = this._SanPham_ChiTiet.Entity;
				if (((previousValue != value) 
							|| (this._SanPham_ChiTiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham_ChiTiet.Entity = null;
						previousValue.ChiTiet_NhapHangs.Remove(this);
					}
					this._SanPham_ChiTiet.Entity = value;
					if ((value != null))
					{
						value.ChiTiet_NhapHangs.Add(this);
						this._sanpham_chitiet_id = value.id;
					}
					else
					{
						this._sanpham_chitiet_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham_ChiTiet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
